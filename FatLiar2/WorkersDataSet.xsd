<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="WorkersDataSet" targetNamespace="http://tempuri.org/WorkersDataSet.xsd" xmlns:mstns="http://tempuri.org/WorkersDataSet.xsd" xmlns="http://tempuri.org/WorkersDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="WorkersConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="WorkersConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FatLiar2.Properties.Settings.GlobalReference.Default.WorkersConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="HolidaysTableAdapter" GeneratorDataComponentClassName="HolidaysTableAdapter" Name="Holidays" UserDataComponentName="HolidaysTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="WorkersConnectionString (Settings)" DbObjectName="dbo.Holidays" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Holidays] ([person_id], [date], [is_holiday], [is_extra]) VALUES (@person_id, @date, @is_holiday, @is_extra)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@person_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="person_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@is_holiday" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="is_holiday" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@is_extra" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="is_extra" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT person_id, date, is_holiday, is_extra FROM dbo.Holidays</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="person_id" DataSetColumn="person_id" />
              <Mapping SourceColumn="date" DataSetColumn="date" />
              <Mapping SourceColumn="is_holiday" DataSetColumn="is_holiday" />
              <Mapping SourceColumn="is_extra" DataSetColumn="is_extra" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Person2ProjectTableAdapter" GeneratorDataComponentClassName="Person2ProjectTableAdapter" Name="Person2Project" UserDataComponentName="Person2ProjectTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="WorkersConnectionString (Settings)" DbObjectName="dbo.Person2Project" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Person2Project] ([person_id], [project_id], [money]) VALUES (@person_id, @project_id, @money)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@person_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="person_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@project_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="project_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@money" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="money" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT person_id, project_id, money FROM dbo.Person2Project</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="person_id" DataSetColumn="person_id" />
              <Mapping SourceColumn="project_id" DataSetColumn="project_id" />
              <Mapping SourceColumn="money" DataSetColumn="money" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonsTableAdapter" GeneratorDataComponentClassName="PersonsTableAdapter" Name="Persons" UserDataComponentName="PersonsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="WorkersConnectionString (Settings)" DbObjectName="dbo.Persons" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Persons] WHERE (([person_id] = @Original_person_id) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_person_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="person_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Persons] ([person_id], [name]) VALUES (@person_id, @name);
SELECT person_id, name FROM Persons WHERE (person_id = @person_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@person_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="person_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT person_id, name FROM dbo.Persons</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Persons] SET [person_id] = @person_id, [name] = @name WHERE (([person_id] = @Original_person_id) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)));
SELECT person_id, name FROM Persons WHERE (person_id = @person_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@person_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="person_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_person_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="person_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="person_id" DataSetColumn="person_id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProjectsTableAdapter" GeneratorDataComponentClassName="ProjectsTableAdapter" Name="Projects" UserDataComponentName="ProjectsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="WorkersConnectionString (Settings)" DbObjectName="dbo.Projects" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Projects] WHERE (([project_id] = @Original_project_id) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_is_state_funded = 1 AND [is_state_funded] IS NULL) OR ([is_state_funded] = @Original_is_state_funded)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_project_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="project_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_is_state_funded" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="is_state_funded" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_is_state_funded" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="is_state_funded" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Projects] ([project_id], [name], [is_state_funded]) VALUES (@project_id, @name, @is_state_funded);
SELECT project_id, name, is_state_funded FROM Projects WHERE (project_id = @project_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@project_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="project_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@is_state_funded" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="is_state_funded" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT project_id, name, is_state_funded FROM dbo.Projects</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Projects] SET [project_id] = @project_id, [name] = @name, [is_state_funded] = @is_state_funded WHERE (([project_id] = @Original_project_id) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_is_state_funded = 1 AND [is_state_funded] IS NULL) OR ([is_state_funded] = @Original_is_state_funded)));
SELECT project_id, name, is_state_funded FROM Projects WHERE (project_id = @project_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@project_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="project_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@is_state_funded" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="is_state_funded" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_project_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="project_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_is_state_funded" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="is_state_funded" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_is_state_funded" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="is_state_funded" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="project_id" DataSetColumn="project_id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="is_state_funded" DataSetColumn="is_state_funded" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="WorkersDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="WorkersDataSet" msprop:Generator_UserDSName="WorkersDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Holidays" msprop:Generator_TableClassName="HolidaysDataTable" msprop:Generator_TableVarName="tableHolidays" msprop:Generator_TablePropName="Holidays" msprop:Generator_RowDeletingName="HolidaysRowDeleting" msprop:Generator_RowChangingName="HolidaysRowChanging" msprop:Generator_RowEvHandlerName="HolidaysRowChangeEventHandler" msprop:Generator_RowDeletedName="HolidaysRowDeleted" msprop:Generator_UserTableName="Holidays" msprop:Generator_RowChangedName="HolidaysRowChanged" msprop:Generator_RowEvArgName="HolidaysRowChangeEvent" msprop:Generator_RowClassName="HolidaysRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="person_id" msprop:Generator_ColumnVarNameInTable="columnperson_id" msprop:Generator_ColumnPropNameInRow="person_id" msprop:Generator_ColumnPropNameInTable="person_idColumn" msprop:Generator_UserColumnName="person_id" type="xs:int" />
              <xs:element name="date" msprop:Generator_ColumnVarNameInTable="columndate" msprop:Generator_ColumnPropNameInRow="date" msprop:Generator_ColumnPropNameInTable="dateColumn" msprop:Generator_UserColumnName="date" type="xs:dateTime" minOccurs="0" />
              <xs:element name="is_holiday" msprop:Generator_ColumnVarNameInTable="columnis_holiday" msprop:Generator_ColumnPropNameInRow="is_holiday" msprop:Generator_ColumnPropNameInTable="is_holidayColumn" msprop:Generator_UserColumnName="is_holiday" type="xs:boolean" minOccurs="0" />
              <xs:element name="is_extra" msprop:Generator_ColumnVarNameInTable="columnis_extra" msprop:Generator_ColumnPropNameInRow="is_extra" msprop:Generator_ColumnPropNameInTable="is_extraColumn" msprop:Generator_UserColumnName="is_extra" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Person2Project" msprop:Generator_TableClassName="Person2ProjectDataTable" msprop:Generator_TableVarName="tablePerson2Project" msprop:Generator_TablePropName="Person2Project" msprop:Generator_RowDeletingName="Person2ProjectRowDeleting" msprop:Generator_RowChangingName="Person2ProjectRowChanging" msprop:Generator_RowEvHandlerName="Person2ProjectRowChangeEventHandler" msprop:Generator_RowDeletedName="Person2ProjectRowDeleted" msprop:Generator_UserTableName="Person2Project" msprop:Generator_RowChangedName="Person2ProjectRowChanged" msprop:Generator_RowEvArgName="Person2ProjectRowChangeEvent" msprop:Generator_RowClassName="Person2ProjectRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="person_id" msprop:Generator_ColumnVarNameInTable="columnperson_id" msprop:Generator_ColumnPropNameInRow="person_id" msprop:Generator_ColumnPropNameInTable="person_idColumn" msprop:Generator_UserColumnName="person_id" type="xs:int" />
              <xs:element name="project_id" msprop:Generator_ColumnVarNameInTable="columnproject_id" msprop:Generator_ColumnPropNameInRow="project_id" msprop:Generator_ColumnPropNameInTable="project_idColumn" msprop:Generator_UserColumnName="project_id" type="xs:int" />
              <xs:element name="money" msprop:Generator_ColumnVarNameInTable="columnmoney" msprop:Generator_ColumnPropNameInRow="money" msprop:Generator_ColumnPropNameInTable="moneyColumn" msprop:Generator_UserColumnName="money" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Persons" msprop:Generator_TableClassName="PersonsDataTable" msprop:Generator_TableVarName="tablePersons" msprop:Generator_TablePropName="Persons" msprop:Generator_RowDeletingName="PersonsRowDeleting" msprop:Generator_RowChangingName="PersonsRowChanging" msprop:Generator_RowEvHandlerName="PersonsRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonsRowDeleted" msprop:Generator_UserTableName="Persons" msprop:Generator_RowChangedName="PersonsRowChanged" msprop:Generator_RowEvArgName="PersonsRowChangeEvent" msprop:Generator_RowClassName="PersonsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="person_id" msprop:Generator_ColumnVarNameInTable="columnperson_id" msprop:Generator_ColumnPropNameInRow="person_id" msprop:Generator_ColumnPropNameInTable="person_idColumn" msprop:Generator_UserColumnName="person_id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Projects" msprop:Generator_TableClassName="ProjectsDataTable" msprop:Generator_TableVarName="tableProjects" msprop:Generator_TablePropName="Projects" msprop:Generator_RowDeletingName="ProjectsRowDeleting" msprop:Generator_RowChangingName="ProjectsRowChanging" msprop:Generator_RowEvHandlerName="ProjectsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProjectsRowDeleted" msprop:Generator_UserTableName="Projects" msprop:Generator_RowChangedName="ProjectsRowChanged" msprop:Generator_RowEvArgName="ProjectsRowChangeEvent" msprop:Generator_RowClassName="ProjectsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="project_id" msprop:Generator_ColumnVarNameInTable="columnproject_id" msprop:Generator_ColumnPropNameInRow="project_id" msprop:Generator_ColumnPropNameInTable="project_idColumn" msprop:Generator_UserColumnName="project_id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="is_state_funded" msprop:Generator_ColumnVarNameInTable="columnis_state_funded" msprop:Generator_ColumnPropNameInRow="is_state_funded" msprop:Generator_ColumnPropNameInTable="is_state_fundedColumn" msprop:Generator_UserColumnName="is_state_funded" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Persons" />
      <xs:field xpath="mstns:person_id" />
    </xs:unique>
    <xs:unique name="Projects_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Projects" />
      <xs:field xpath="mstns:project_id" />
    </xs:unique>
  </xs:element>
</xs:schema>